version: "3.7"
services:
  postgres:
    image: "postgres:13"
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
      - PG_DATA=/var/lib/postgresql/data
    networks: 
      - videosapp
  backend:
    container_name: videosapp-backend
    build: 
      context: backend
      target: development
      dockerfile: Dockerfile
    volumes: 
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    environment: 
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_USER=root
      - PG_PASSWORD=password
      - PG_DATABASE=postgres
      - BACKEND_URL=http://localhost:4000
    ports: 
      - "4000:4000"
    command: npm run start:dev
    networks: 
      - videosapp
    depends_on: 
      - postgres
    restart: always
  frontend:
    container_name: videosapp-frontend
    ports:
      - "3000:3000"
    build: 
      context: frontend
      dockerfile: Dockerfile
    volumes: 
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.next
    networks: 
      - videosapp
    depends_on: 
      - backend
    restart: always
  adminer:
    image: adminer
    depends_on: 
      - postgres
    environment: 
      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_DB_HOST: postgres
      ADMINER_DEFAULT_DB_NAME: postgres
    restart: always
    ports: 
      - "8080:8080"
    networks: 
      - videosapp
networks: 
  videosapp:
volumes: 
  pgdata:
